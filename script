let url = "https://www.melivecode.com/api/users";
let display_data = document.querySelector("#display_data");
let first_name = document.querySelector("#first_name");
let last_name = document.querySelector("#last_name");
let email_input = document.querySelector("#email_input");
let photo_input = document.querySelector("#photo_input");
let submit_btn = document.querySelector("#submit");
// let id = document.querySelector("#submit");

let firstName = first_name.value;
let lastName = last_name.value;
let emailInput = email_input.value;
let photoLink = photo_input.value;

// display fetching datas
async function getMethod() {
  try {
    let response = await fetch(url);
    let data = await response.json();
    display_data.innerHTML = "";
    if (!response.ok) throw Error("file not get");
    else {
      data.forEach(({ fname, lname, username, avatar, id }) => {
        display_data.innerHTML += ` <tr id="${id}">
        <th scope="row">${id}</th>
        <td><img src="${avatar}" alt="" /></td>
        <td>${fname}</td>
        <td>${lname}</td>
        <td>${username}</td>
        <td><i class="bi bi-pencil-square" onclick="editElement(${id})"></i></td>
        <td><i class="bi bi-trash3" onclick="deleteElement(${id})"></i></td>
      </tr>`;
      });
    }
  } catch (err) {
    console.log(err.message);
  }
}
getMethod();

//post method

submit_btn.addEventListener("click", function (event) {
  event.preventDefault();

  async function postMethod() {
    try {
      let response = await fetch(`${url}/create`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          fname: first_name.value,
          lname: last_name.value,
          username: email_input.value,
          password: 1234,
          email: email_input.value,
          avatar: photo_input.value,
        }),
      });
      if (!response.ok) throw Error("file not post");
      else {
        getMethod();
        first_name.value = "";
        last_name.value = "";
        email_input.value = "";
        photo_input.value = "";
      }
    } catch (err) {
      console.log(err.message);
    }
  }
  postMethod();
});

// Deleted Method
async function deleteElement(id) {
  try {
    let response = await fetch(`${url}/delete`, {
      method: "DELETE",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        id: id,
      }),
    });
    if (!response.ok) throw Error("file not post");
    else {
      getMethod();
    }
  } catch (err) {
    console.log(err.message);
  }
}

// edit Method
async function editElement(id) {
  // retrive data
  try {
    let response = await fetch(`${url}/${id}`);
    let editData = await response.json();
    if (!response.ok) throw new Error("data not get");
    else {
      first_name.value = editData.user.fname;
      last_name.value = editData.user.lname;
      email_input.value = editData.user.username;
      photo_input.value = editData.user.avatar;
    }
  } catch (err) {
    console.log(err.message);
  }

  // update New values
  try {
    let response = await fetch(`${url}/update`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        id: id,
        fname: first_name.value,
        lname: last_name.value,
        username: email_input.value,
        password: 1234,
        email: email_input.value,
        avatar: photo_input.value,
      }),
    });
    if (!response.ok) throw new Error("data not Update");
    else {
      getMethod();
    }
  } catch (err) {
    console.log(err.message);
  }
}
